name: "Run terraform plan"
description: "Run terraform plan on Azure"

inputs:
  client_id:
    description: "Azure service principal App Id"
    required: true
  tenant_id:
    description: "Azure tenant id"
    required: true
  subscription_id:
    description: "Azure subscription Id"
    required: true
  dir:
    description: "terraform directory"
    required: true
  azure_environment:
    description: "Azure Environment"
    required: true
  terraform_action:
    description: "Terraform action that must be executed. E.g. plan|apply|init..."
    required: true
  aks_name:
    description: "AKS name"
    required: true


runs:
  using: "composite"
  steps:
      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ inputs.client_id }}
          tenant-id: ${{ inputs.tenant_id }}
          subscription-id: ${{ inputs.subscription_id }}

      - name: Cache terraform modules
        id: cache-terraform-modules
        uses: actions/cache@6fd2d4538ca777f67fccddb233cf1a8ff1339012
        with:
          path: ${{ inputs.dir }}/.terraform
          key: terraform-${{ inputs.dir }}-${{ github.sha }}
          restore-keys: |
            terraform-${{ inputs.dir }}

      - name: Generate kubeconfig (with kubelogin)
        shell: bash
        run: |
          echo "üéì Configure kubeconfig"

          aks_resource_group=$(az aks list -o tsv --query "[?contains(name,'${{ inputs.aks_name }}')].resourceGroup" 2>/dev/null | tr -d '\r')
          if [[ -z "$aks_resource_group" ]]; then
            echo "‚ùå aks resource group not found"
            exit 1
          fi
          echo "‚úÖ Calculated aks resource group"

          export KUBECONFIG_PATH=~/.kube
          az aks get-credentials -g ${aks_resource_group} -n ${{ inputs.aks_name }} -f ${KUBECONFIG_PATH}/config-${{ inputs.aks_name }} --only-show-errors --overwrite-existing
          echo "‚úÖ Get kubernetes credentials via az aks get-credentials"

          echo "‚è≥ Convert kubeconfig via kubelogin"
          export KUBECONFIG=${KUBECONFIG_PATH}/config-${{ inputs.aks_name }}
          kubelogin convert-kubeconfig -l azurecli
          echo "‚úÖ Kubeconfig converted correctly via kubelogin and saved into ${KUBECONFIG_PATH}/config-${{ inputs.aks_name }}"

      - name: Terraform plan
        shell: bash
        run: |
          export PATH="${HOME}/bin:$PATH"
          export ARM_CLIENT_ID=${{ inputs.client_id }}
          export ARM_TENANT_ID=${{ inputs.tenant_id }}
          export ARM_SUBSCRIPTION_ID=${{ inputs.subscription_id }}
          export ARM_USE_OIDC=true
          export ARM_USE_AZUREAD=true
          export ARM_STORAGE_USE_AZUREAD=true

          cd ${{ inputs.dir }}

          echo "[INFO] üöÄ Run terraform ${{ inputs.terraform_action }} + kubernetes"
          if [[ "${{ inputs.terraform_action }}" == "apply" ]]; then
            bash terraform.sh ${{ inputs.terraform_action }} ${{ inputs.azure_environment }} -auto-approve -lock-timeout=300s -lock=false
          else
            bash terraform.sh ${{ inputs.terraform_action }} ${{ inputs.azure_environment }} -lock-timeout=300s -lock=false
          fi
